name: Deploying to Production

on:
  push:
    branches:
      - main
jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Check out code
        uses: actions/checkout@v4

      - name: Log in to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}

      - name: Create remote directories for monitoring stack
        uses: appleboy/ssh-action@v1.0.0 # Using v1.0.0, ensure this version is suitable or use v1.2.0 as before
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USERNAME }}
          key: ${{ secrets.SSH_KEY }}
          script: |
            mkdir -p ~/hiringgo_monitoring/prometheus

      - name: Copy docker-compose.yml to remote
        uses: appleboy/scp-action@master 
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USERNAME }}
          key: ${{ secrets.SSH_KEY }}
          source: "docker-compose.yml"
          target: "~/hiringgo_monitoring/"

      - name: Substitute secrets in prometheus.yml
        run: |
          # Make a temporary copy to avoid modifying the version in the repository checkout
          cp prometheus.yml prometheus_temp.yml
          sed -i 's|PLACEHOLDER_GRAFANA_REMOTE_WRITE_URL|${{ secrets.GRAFANA_REMOTE_WRITE_URL }}|g' prometheus_temp.yml
          sed -i 's|PLACEHOLDER_GRAFANA_USERNAME|${{ secrets.GRAFANA_USERNAME }}|g' prometheus_temp.yml
          sed -i 's|PLACEHOLDER_GRAFANA_API_KEY|${{ secrets.GRAFANA_API_KEY }}|g' prometheus_temp.yml
        env:
          GRAFANA_REMOTE_WRITE_URL: ${{ secrets.GRAFANA_REMOTE_WRITE_URL }}
          GRAFANA_USERNAME: ${{ secrets.GRAFANA_USERNAME }}
          GRAFANA_API_KEY: ${{ secrets.GRAFANA_API_KEY }}

      - name: Copy prometheus.yml to remote
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USERNAME }}
          key: ${{ secrets.SSH_KEY }}
          source: "prometheus_temp.yml" # Source the modified temporary file
          target: "~/hiringgo_monitoring/prometheus/prometheus.yml" # Ensure target path is correct

      - name: Deploy Prometheus monitoring stack
        uses: appleboy/ssh-action@v1.0.0 # Using v1.0.0, ensure this version is suitable or use v1.2.0 as before
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USERNAME }}
          key: ${{ secrets.SSH_KEY }}
          script: |
            # Determine which docker compose command to use
            COMPOSE_CMD=""
            if command -v docker &> /dev/null && docker compose version &> /dev/null; then
              echo "Docker Compose V2 (docker compose) found."
              COMPOSE_CMD="docker compose"
            elif command -v docker-compose &> /dev/null; then
              echo "Docker Compose V1 (docker-compose) found."
              COMPOSE_CMD="docker-compose"
            else
              echo "Neither 'docker compose' nor 'docker-compose' found. Attempting to install docker-compose (V1)..."
              # Try to get the latest version tag from GitHub API for V1
              LATEST_COMPOSE_V1_VERSION=$(curl -s https://api.github.com/repos/docker/compose/releases/latest | grep 'tag_name' | cut -d\" -f4)
              # Fallback to a known stable version if API call fails or returns empty
              if [ -z "$LATEST_COMPOSE_V1_VERSION" ]; then
                echo "Could not fetch latest V1 version tag. Using fallback version 1.29.2."
                LATEST_COMPOSE_V1_VERSION="1.29.2"
              fi
              echo "Downloading Docker Compose V1 version ${LATEST_COMPOSE_V1_VERSION}..."
              sudo curl -L "https://github.com/docker/compose/releases/download/${LATEST_COMPOSE_V1_VERSION}/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
              sudo chmod +x /usr/local/bin/docker-compose
              if command -v docker-compose &> /dev/null; then
                echo "docker-compose (V1) installed successfully."
                COMPOSE_CMD="docker-compose"
              else
                echo "Failed to install docker-compose (V1). Please ensure Docker Compose (V1 or V2) is installed manually on the server and in the PATH."
                exit 1
              fi
            fi
            echo "Using compose command: $COMPOSE_CMD"

            cd ~/hiringgo_monitoring

            echo "Verifying prometheus.yml on host before docker-compose operations..."
            if [ -f "./prometheus/prometheus.yml" ]; then
              echo "./prometheus/prometheus.yml is a file. OK."
              ls -l ./prometheus/prometheus.yml
              echo "First 10 lines of ./prometheus/prometheus.yml:"
              head -n 10 ./prometheus/prometheus.yml
            elif [ -d "./prometheus/prometheus.yml" ]; then
              echo "ERROR: ./prometheus/prometheus.yml is a DIRECTORY on the host, but it should be a FILE."
              echo "This is likely the cause of the mount error."
              exit 1
            else
              echo "ERROR: ./prometheus/prometheus.yml does NOT EXIST on the host at ./prometheus/prometheus.yml."
              echo "The scp step might have failed or targeted the wrong path."
              exit 1
            fi
            
            # Optional: Docker login if any images in docker-compose.yml are private and not covered by runner's login
            # docker login -u ${{ secrets.DOCKER_HUB_USERNAME }} -p ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}
            
            echo "Pulling latest images..."
            $COMPOSE_CMD pull
            
            echo "Stopping and removing existing containers (if any) defined in docker-compose.yml..."
            $COMPOSE_CMD down --remove-orphans
            
            echo "Starting services..."
            $COMPOSE_CMD up -d --remove-orphans # Start or update services in detached mode
